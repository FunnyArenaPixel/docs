{
  "version": 3,
  "sources": ["dep:@vuepress_shared", "../../../node_modules/@vuepress/shared/lib/esm/index.js", "../../../node_modules/@vuepress/shared/lib/esm/types/index.js", "../../../node_modules/@vuepress/shared/lib/esm/types/head.js", "../../../node_modules/@vuepress/shared/lib/esm/types/locale.js", "../../../node_modules/@vuepress/shared/lib/esm/types/page.js", "../../../node_modules/@vuepress/shared/lib/esm/types/site.js", "../../../node_modules/@vuepress/shared/lib/esm/types/ssr.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/index.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/dedupeHead.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/resolveHeadIdentifier.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/ensureLeadingSlash.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/ensureEndingSlash.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/formatDateString.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/htmlEscape.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/htmlUnescape.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkExternal.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkFtp.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkHttp.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkMailto.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/isLinkTel.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/isPlainObject.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/normalizePackageName.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/removeEndingSlash.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/removeLeadingSlash.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/resolveLocalePath.js", "../../../node_modules/@vuepress/shared/lib/esm/utils/resolveRoutePathFromUrl.js"],
  "sourcesContent": ["\nexport * from \"../../../../node_modules/@vuepress/shared/lib/esm/index.js\"", "export * from './types';\r\nexport * from './utils';\r\n", "export * from './head';\r\nexport * from './locale';\r\nexport * from './page';\r\nexport * from './site';\r\nexport * from './ssr';\r\n", "export {};\r\n", "export {};\r\n", "export {};\r\n", "export {};\r\n", "export {};\r\n", "export { isArray, isFunction, isPromise, isString } from '@vue/shared';\r\nexport * from './dedupeHead';\r\nexport * from './ensureLeadingSlash';\r\nexport * from './ensureEndingSlash';\r\nexport * from './formatDateString';\r\nexport * from './htmlEscape';\r\nexport * from './htmlUnescape';\r\nexport * from './isLinkExternal';\r\nexport * from './isLinkFtp';\r\nexport * from './isLinkHttp';\r\nexport * from './isLinkMailto';\r\nexport * from './isLinkTel';\r\nexport * from './isPlainObject';\r\nexport * from './normalizePackageName';\r\nexport * from './removeEndingSlash';\r\nexport * from './removeLeadingSlash';\r\nexport * from './resolveHeadIdentifier';\r\nexport * from './resolveLocalePath';\r\nexport * from './resolveRoutePathFromUrl';\r\n", "import { resolveHeadIdentifier } from './resolveHeadIdentifier';\r\n/**\r\n * Dedupe head config with identifier\r\n *\r\n * Items that appear earlier have higher priority\r\n */\r\nexport const dedupeHead = (head) => {\r\n    const identifierSet = new Set();\r\n    const result = [];\r\n    head.forEach((item) => {\r\n        const identifier = resolveHeadIdentifier(item);\r\n        if (!identifierSet.has(identifier)) {\r\n            identifierSet.add(identifier);\r\n            result.push(item);\r\n        }\r\n    });\r\n    return result;\r\n};\r\n", "/**\r\n * Resolve identifier of a tag, to avoid duplicated tags in `<head>`\r\n */\r\nexport const resolveHeadIdentifier = ([tag, attrs, content,]) => {\r\n    // avoid duplicated `<meta>` with same `name`\r\n    if (tag === 'meta' && attrs.name) {\r\n        return `${tag}.${attrs.name}`;\r\n    }\r\n    // there should be only one `<title>` or `<base>`\r\n    if (['title', 'base'].includes(tag)) {\r\n        return tag;\r\n    }\r\n    // avoid duplicated `<template>` with same `id`\r\n    if (tag === 'template' && attrs.id) {\r\n        return `${tag}.${attrs.id}`;\r\n    }\r\n    return JSON.stringify([tag, attrs, content]);\r\n};\r\n", "/**\r\n * Ensure a url string to have leading slash /\r\n */\r\nexport const ensureLeadingSlash = (str) => str.replace(/^\\/?/, '/');\r\n", "/**\r\n * Ensure a url string to have ending slash /\r\n */\r\nexport const ensureEndingSlash = (str) => /(\\.html|\\/)$/.test(str) ? str : str + '/';\r\n", "/**\r\n * Format a date string to `yyyy-MM-dd`\r\n */\r\nexport const formatDateString = (str, defaultDateString = '') => {\r\n    // match the `yyyy-(M)M-(d)d` pattern\r\n    const dateMatch = str.match(/\\b(\\d{4})-(\\d{1,2})-(\\d{1,2})\\b/);\r\n    // return `defaultDateString` if no matched pattern\r\n    if (dateMatch === null) {\r\n        return defaultDateString;\r\n    }\r\n    // fill leading zeros for month and day\r\n    const [, yearStr, monthStr, dayStr] = dateMatch;\r\n    return [yearStr, monthStr.padStart(2, '0'), dayStr.padStart(2, '0')].join('-');\r\n};\r\n", "const htmlEscapeMap = {\r\n    '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n    \"'\": '&#39;',\r\n    '\"': '&quot;',\r\n};\r\nconst htmlEscapeRegexp = /[&<>'\"]/g;\r\n/**\r\n * Escape html chars\r\n */\r\nexport const htmlEscape = (str) => str.replace(htmlEscapeRegexp, (char) => htmlEscapeMap[char]);\r\n", "const htmlUnescapeMap = {\r\n    '&amp;': '&',\r\n    '&#38;': '&',\r\n    '&lt;': '<',\r\n    '&#60;': '<',\r\n    '&gt;': '>',\r\n    '&#62;': '>',\r\n    '&apos;': \"'\",\r\n    '&#39;': \"'\",\r\n    '&quot;': '\"',\r\n    '&#34;': '\"',\r\n};\r\nconst htmlUnescapeRegexp = /&(amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\r\n/**\r\n * Unescape html chars\r\n */\r\nexport const htmlUnescape = (str) => str.replace(htmlUnescapeRegexp, (char) => htmlUnescapeMap[char]);\r\n", "import { isLinkFtp } from './isLinkFtp';\r\nimport { isLinkHttp } from './isLinkHttp';\r\n/**\r\n * Determine a link is external or not\r\n */\r\nexport const isLinkExternal = (link, base = '/') => {\r\n    // http link or ftp link\r\n    if (isLinkHttp(link) || isLinkFtp(link)) {\r\n        return true;\r\n    }\r\n    // absolute link that does not start with `base`\r\n    if (link.startsWith('/') && !link.startsWith(base)) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n", "/**\r\n * Determine a link is ftp link or not\r\n */\r\nexport const isLinkFtp = (link) => link.startsWith('ftp://');\r\n", "/**\r\n * Determine a link is http link or not\r\n *\r\n * - http://github.com\r\n * - https://github.com\r\n * - //github.com\r\n */\r\nexport const isLinkHttp = (link) => /^(https?:)?\\/\\//.test(link);\r\n", "/**\r\n * Determine a link is a mailto: address or not\r\n */\r\nexport const isLinkMailto = (link) => /^mailto:/.test(link);\r\n", "/**\r\n * Determine a link is a tel: address or not\r\n */\r\nexport const isLinkTel = (link) => /^tel:/.test(link);\r\n", "/**\r\n * Check if a value is plain object, with generic type support\r\n */\r\nexport const isPlainObject = (val) => Object.prototype.toString.call(val) === '[object Object]';\r\n", "/**\r\n * Normalize package name\r\n */\r\nexport const normalizePackageName = (request, org, type = null) => {\r\n    // org prefix and type prefix\r\n    const orgPrefix = `${org}-`;\r\n    const typePrefix = type === null ? '' : `${type}-`;\r\n    // scoped package pattern\r\n    const scopedMatch = request.match(/^@(.*)\\/(.*)$/);\r\n    // handle non-scoped package\r\n    if (scopedMatch === null) {\r\n        // full name, return as is\r\n        if (request.startsWith(`${orgPrefix}${typePrefix}`)) {\r\n            return request;\r\n        }\r\n        // short name, add org prefix and type prefix\r\n        return `${orgPrefix}${typePrefix}${request}`;\r\n    }\r\n    // handle scoped package\r\n    const [, reqOrg, reqName] = scopedMatch;\r\n    // handle default org\r\n    if (reqOrg === org) {\r\n        // full name, return as is\r\n        if (reqName.startsWith(typePrefix)) {\r\n            return request;\r\n        }\r\n        // short name, add type prefix\r\n        return `@${reqOrg}/${typePrefix}${reqName}`;\r\n    }\r\n    // handle other org\r\n    // full name, return as is\r\n    if (reqName.startsWith(`${orgPrefix}${typePrefix}`)) {\r\n        return request;\r\n    }\r\n    // short name, add org prefix and type prefix\r\n    return `@${reqOrg}/${orgPrefix}${typePrefix}${reqName}`;\r\n};\r\n", "/**\r\n * Remove ending slash / from a string\r\n */\r\nexport const removeEndingSlash = (str) => str.replace(/\\/$/, '');\r\n", "/**\r\n * Remove leading slash / from a string\r\n */\r\nexport const removeLeadingSlash = (str) => str.replace(/^\\//, '');\r\n", "/**\r\n * Resolve the matched locale path of route path\r\n */\r\nexport const resolveLocalePath = (locales, routePath) => {\r\n    const localePaths = Object.keys(locales).sort((a, b) => {\r\n        const levelDelta = b.split('/').length - a.split('/').length;\r\n        if (levelDelta !== 0) {\r\n            return levelDelta;\r\n        }\r\n        return b.length - a.length;\r\n    });\r\n    for (const localePath of localePaths) {\r\n        if (routePath.startsWith(localePath)) {\r\n            return localePath;\r\n        }\r\n    }\r\n    return '/';\r\n};\r\n", "export const resolveRoutePathFromUrl = (url, base = '/') => url\r\n    // remove url origin\r\n    .replace(/^(https?:)?\\/\\/[^/]*/, '')\r\n    // remove site base\r\n    .replace(new RegExp(`^${base}`), '/');\r\n"],
  "mappings": "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",
  "names": []
}
